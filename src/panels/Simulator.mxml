<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:searchField="ui.searchField.*" 
		 xmlns:comboBox="ui.comboBox.*" xmlns:ribbonSectionHeader="ui.ribbonSectionHeader.*" 
		 xmlns:roundedBitmapImage="ui.roundedBitmapImage.*" xmlns:manageableButton="ui.manageableButton.*" 
		 xmlns:checkBox="ui.checkBox.*" creationComplete="simulator_creationCompleteHandler(event)">
	
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.controls.Text;
			import mx.events.FlexEvent;
			
			import spark.events.IndexChangeEvent;
			
			[Bindable]
			private var footerButtonBarValue:String = "";
			[Bindable]
			private var canvasScale:Number = 1;
			
			protected function overControlButtonsHandler(event:MouseEvent):void
			{
				changeButtonState("over");				
			}
			private function changeButtonState(state2Change:String = ""):void {
				minimizeBtn.currentButtonState = maximizeBtn.currentButtonState = state2Change;
				minimizeBtn.invalidateSkinState();
				maximizeBtn.invalidateSkinState();
			}
			
			protected function outControlButtonsHandler(event:MouseEvent):void
			{
				changeButtonState();
			}
			
			protected function downControlButtonsHandler(event:MouseEvent):void
			{
				var button:ManageableButton = event.currentTarget as ManageableButton;
				button.currentButtonState = "";
				button.invalidateSkinState();
			}
			protected function footerButtonBar_mouseOverHandler(event:MouseEvent):void
			{
				footerButtonBarValue = event.target.label as String;
			}
			
			protected function footerButtonBar_rollOutHandler(event:MouseEvent):void
			{
				footerButtonBarValue = footerButtonBar.selectedItem as String;
			}
			
			protected function zoomSlider_changeHandler(event:Event):void
			{
				canvasScale = zoomSlider.value/100;
				zoomComboBox.textInput.text = zoomSlider.value + "%";
			}
			
			protected function simulator_creationCompleteHandler(event:FlexEvent):void
			{
				canvasScale = zoomSlider.value/100;
				zoomComboBox.textInput.text = zoomSlider.value + "%";
			}
			
			protected function zoomComboBox_changeHandler(event:IndexChangeEvent):void
			{
				var selectedValue:String = zoomComboBox.selectedItem as String; 
				var zoom:Number = Number(selectedValue.substr(0, selectedValue.length - 1));
				canvasScale = zoom/100;
				zoomSlider.value = zoom;
				
			}
			
		]]>
	</fx:Script>
	
	<fx:Style>
		.iconButtons {
			skinClass: ClassReference("ui.iconButton.IconButtonSkin");
		}
		#closeBtn {
			icon2Display: Embed('assets/icons/tb/close.png');
			icon2DisplayDown: Embed('assets/icons/tb/close-down.png');
		}
		#minimizeBtn {
			icon2Display: Embed('assets/icons/tb/minimize.png');
			icon2DisplayOver: Embed('assets/icons/tb/minimize-over.png');
			icon2DisplayDown: Embed('assets/icons/tb/minimize-down.png');
		}
		#maximizeBtn {
			icon2Display: Embed('assets/icons/tb/maximize.png');
			icon2DisplayOver: Embed('assets/icons/tb/maximize-over.png');
			icon2DisplayDown: Embed('assets/icons/tb/maximize-down.png');
		}
		.toolBarIconButton {
			skinClass: ClassReference("ui.toolBarIconButton.ToolBarIconButtonSkin");
		}
		#newBtn {icon2Display: Embed('assets/icons/tb/newIcon.png');}
		#templateBtn {icon2Display: Embed('assets/icons/tb/templateIcon.png');}
		#openBtn {icon2Display: Embed('assets/icons/tb/openIcon.png');}
		#saveBtn {icon2Display: Embed('assets/icons/tb/saveIcon.png');}
		#printBtn {icon2Display: Embed('assets/icons/tb/printIcon.png');}
		#cutBtn {icon2Display: Embed('assets/icons/tb/cutIcon.png');}
		#copyBtn {icon2Display: Embed('assets/icons/tb/copyIcon.png');}
		#pasteBtn {icon2Display: Embed('assets/icons/tb/pasteIcon.png');}
		#formatBtn {icon2Display: Embed('assets/icons/tb/formatIcon.png');}
		#undoBtn {icon2Display: Embed('assets/icons/tb/undoIcon.png');}
		#redoBtn {icon2Display: Embed('assets/icons/tb/redoIcon.png');}
		#toolBoxBtn {icon2Display: Embed('assets/icons/tb/toolboxIcon.png');}
		#mediaBtn {icon2Display: Embed('assets/icons/tb/mediaIcon.png');}
		#helpBtn {icon2Display: Embed('assets/icons/tb/helpIcon.png');}
		
		.ribbonIconButton {
			skinClass: ClassReference("ui.ribbonVIconLabelButton.RibbonVIconLabelButtonSkin");
		}
		#fromCurrentSlideBtn {icon2Display: Embed('assets/icons/rb/startIcon.png');}
		#fromStartBtn {icon2Display: Embed('assets/icons/rb/fromStartIcon.png');}
		.ribbonHIconButton {
			skinClass: ClassReference("ui.ribbonHIconLabelButton.RibbonHIconLabelButtonSkin");
		}
		#broadcastBtn {icon2Display: Embed('assets/icons/rb/broadcast.png');}
		#customShowBtn {icon2Display: Embed('assets/icons/rb/customShow.png');}
		
		
		#presenterBtn {icon2Display: Embed('assets/icons/rb/presenterView.png');}
		#rehearseBtn {icon2Display: Embed('assets/icons/rb/rehearse.png');}
		#recordBtn {icon2Display: Embed('assets/icons/rb/record.png');}
		
		#actionBtn {icon2Display: Embed('assets/icons/rb/actionSettings.png');}
		#hideBtn {icon2Display: Embed('assets/icons/rb/hideSlide.png');}
		#setUpBtn {icon2Display: Embed('assets/icons/rb/setUpShow.png');}
		
		/* FOOTER */
		#zoomButton {
			skinClass: ClassReference("ui.iconButton.IconButtonSkin");
			icon2Display: Embed('assets/icons/footer/footerZoom.png');
			icon2DisplayDown: Embed('assets/icons/footer/footerZoom-down.png');
		}
		
		
	</fx:Style>
	
	<s:VGroup width="100%" gap="0" top="0" height="100%">
		
		<!--********** TOOLBAR **********-->
		<s:Group id="toolBarGroup" width="100%" >
			<!--border around toolbar-->
			<s:Rect left="0" right="0" top="0" height="54" topLeftRadiusX="5" topLeftRadiusY="5" topRightRadiusX="5" topRightRadiusY="5">
				<s:stroke>
					<s:SolidColorStroke color="0x6b6b6b"/>
				</s:stroke>
			</s:Rect>
			<s:Group top="1" left="1" right="1">
				<!--toolbar background-->
				<roundedBitmapImage:RoundedBitmapImage source="@Embed('assets/skinParts/toolbarGradient.png')" scaleMode="stretch"
													   topLeftCornerRadius="5" topRightCornerRadius="5" width="100%" />
				<s:VGroup width="100%" gap="0">
					<s:Group width="100%" height="25">
						<!--close, minimize, maximize buttons-->
						<s:HGroup paddingLeft="9" paddingTop="5" gap="8">
							<s:Button id="closeBtn" styleName="iconButtons"/>
							<manageableButton:ManageableButton id="minimizeBtn" styleName="iconButtons" mouseOver="overControlButtonsHandler(event)"
															   mouseOut="outControlButtonsHandler(event)" mouseDown="downControlButtonsHandler(event)"/>
							<manageableButton:ManageableButton id="maximizeBtn" styleName="iconButtons" mouseOver="overControlButtonsHandler(event)"
															   mouseOut="outControlButtonsHandler(event)" mouseDown="downControlButtonsHandler(event)"/>
						</s:HGroup>
						<!--presentation heading at the top-->
						<s:HGroup horizontalCenter="0" paddingTop="3" gap="5">
							<s:BitmapImage source="@Embed('assets/icons/tb/presentationIcon.png')"/>
							<s:Group height="100%">
								<s:Label text="Presentation1" color="0x353535" bottom="0" fontSize="13"/>
							</s:Group>
						</s:HGroup>
					</s:Group>
					<s:Group width="100%">
						<!--toolbar icon buttons-->
						<s:HGroup height="25" paddingLeft="2" gap="4">
							<s:Group height="100%"><s:Button id="newBtn" styleName="toolBarIconButton" verticalCenter="0"/></s:Group>
							<s:Group height="100%"><s:Button id="templateBtn" styleName="toolBarIconButton" verticalCenter="0"/></s:Group>
							<s:Group height="100%"><s:Button id="openBtn" styleName="toolBarIconButton" verticalCenter="0"/></s:Group>
							<s:Group height="100%"><s:Button id="saveBtn" styleName="toolBarIconButton" verticalCenter="0"/></s:Group>
							<s:Group height="100%"><s:Button id="printBtn" styleName="toolBarIconButton" verticalCenter="0"/></s:Group>
							
							<s:Group height="100%"><s:BitmapImage source="@Embed('assets/icons/tb/spacer.png')" /></s:Group>
							
							<s:Group height="100%"><s:Button id="cutBtn" enabled="false" styleName="toolBarIconButton" verticalCenter="0"/></s:Group>
							<s:Group height="100%"><s:Button id="copyBtn" enabled="false" styleName="toolBarIconButton" verticalCenter="0"/></s:Group>
							<s:Group height="100%"><s:Button id="pasteBtn" styleName="toolBarIconButton" verticalCenter="0"/></s:Group>
							<s:Group height="100%"><s:Button id="formatBtn" enabled="false" styleName="toolBarIconButton" verticalCenter="0"/></s:Group>
							
							<s:Group height="100%"><s:BitmapImage source="@Embed('assets/icons/tb/spacer.png')" /></s:Group>
							
							<s:Group height="100%"><s:Button id="undoBtn" styleName="toolBarIconButton" verticalCenter="0"/></s:Group>
							<s:Group height="100%"><s:Button id="redoBtn" enabled="false" styleName="toolBarIconButton" verticalCenter="0"/></s:Group>
							
							<s:Group height="100%"><s:BitmapImage source="@Embed('assets/icons/tb/spacer.png')" /></s:Group>
							
							<s:Group height="100%"><s:Button id="toolBoxBtn" styleName="toolBarIconButton" verticalCenter="0"/></s:Group>
							<s:Group height="100%"><s:Button id="mediaBtn" styleName="toolBarIconButton" verticalCenter="0"/></s:Group>
							
							<s:Group height="100%"><s:BitmapImage source="@Embed('assets/icons/tb/spacer.png')" /></s:Group>
							
							<s:Group height="100%"><comboBox:ComboBox id="zoomComboBox" dataProvider="{new ArrayCollection(['400%', '300%', '200%', '150%', '100%', '75%', '66%', '50%', '33%', '25%'])}"
																	  selectedIndex="3" width="50" verticalCenter="0" change="zoomComboBox_changeHandler(event)"/></s:Group>
							
							<s:Group height="100%"><s:BitmapImage source="@Embed('assets/icons/tb/spacer.png')" /></s:Group>
							<s:Group height="100%"><s:Button id="helpBtn" styleName="toolBarIconButton" verticalCenter="0"/></s:Group>
						</s:HGroup>
						<searchField:SearchField top="2" right="6" dataProvider="{new ArrayCollection(['Advanced Find...', 'Replace...'])}" 
												 prompt="Search in Presentation"/>
					</s:Group>
				</s:VGroup>
			</s:Group>
		</s:Group>
		
		
		<s:Spacer height="-1"/>
		
		<!--********** RIBBON **********-->
		<s:Group id="ribbonGroup" width="100%">
			<!--ribbon tabbar-->
			<s:VGroup gap="0" width="100%">
				
				<s:TabBar width="100%" dataProvider="{tabbarViewStack}" skinClass="ui.tabBar.TabBarSkin"/>
				<mx:ViewStack id="tabbarViewStack" width="100%" selectedIndex="6">
					<s:NavigatorContent label="Home"/>
					<s:NavigatorContent label="Theme"/>
					<s:NavigatorContent label="Tables"/>
					<s:NavigatorContent label="SmartArt"/>
					<s:NavigatorContent label="Transitions"/>
					<s:NavigatorContent label="Animations"/>
					<s:NavigatorContent label="Slide Show" width="100%">
						<s:Group height="74" width="100%">
							<!--undercover-->
							<s:Rect left="0" right="0" top="0" bottom="0">
								<s:fill>
									<s:SolidColor color="0xe2d7d1"/>
								</s:fill>
							</s:Rect>
							<!--ribbon background-->
							<s:Group left="2" right="2" top="1" bottom="1">
								<s:Rect left="0" right="0" top="0" bottom="0" radiusX="4" radiusY="4">
									<s:fill>
										<s:SolidColor color="0xe4e4e4"/>
									</s:fill>
									<s:stroke>
										<s:SolidColorStroke color="0xbfb6b1"/>
									</s:stroke>
								</s:Rect>
								<s:HGroup gap="7">
									<s:VGroup gap="3" width="275" paddingTop="3">
										<ribbonSectionHeader:RibbonSectionHeader text="Play Slide Show" width="100%"/>
										<s:HGroup gap="10" paddingLeft="9">
											<s:Button id="fromStartBtn" styleName="ribbonIconButton" label="From Start"/>
											<s:Button id="fromCurrentSlideBtn" styleName="ribbonIconButton" label="From Current Slide"/>
											<s:VGroup gap="2">
												<s:Button id="broadcastBtn" width="112" styleName="ribbonHIconButton" label="Broadcast Show"/>
												<s:Button id="customShowBtn" width="112" styleName="ribbonHIconButton" label="Custom Shows"/>
											</s:VGroup>
										</s:HGroup>
									</s:VGroup>
									
									<s:Group height="100%"><s:BitmapImage source="@Embed('assets/icons/rb/spacer.png')" verticalCenter="2"/></s:Group>
									
									<s:VGroup gap="3" width="240" paddingTop="3">
										<ribbonSectionHeader:RibbonSectionHeader text="Presenter Tools" width="100%"/>
										<s:HGroup gap="10" paddingLeft="9">
											<s:Button id="presenterBtn" styleName="ribbonIconButton" label="Presenter View"/>
											<s:Button id="rehearseBtn" styleName="ribbonIconButton" label="Rehearse"/>
											<s:Button id="recordBtn" styleName="ribbonIconButton" label="Record Slide Show"/>
										</s:HGroup>
									</s:VGroup>
									
									<s:Group height="100%"><s:BitmapImage source="@Embed('assets/icons/rb/spacer.png')" verticalCenter="2"/></s:Group>
									
									
									<s:VGroup gap="3" width="350" paddingTop="3">
										<ribbonSectionHeader:RibbonSectionHeader text="Set Up" width="100%"/>
										<s:HGroup gap="10" paddingLeft="9">
											<s:Button id="actionBtn" styleName="ribbonIconButton" enabled="false" label="Action Settings"/>
											<s:Button id="hideBtn" styleName="ribbonIconButton" label="Hide Slide"/>
											<s:Button id="setUpBtn" styleName="ribbonIconButton" label="Set Up Show"/>
											<s:VGroup gap="2">
												<checkBox:CheckBox label="Play Narrations" selected="true"/>
												<checkBox:CheckBox label="Use Timings" selected="true"/>
												<checkBox:CheckBox label="Show Media Controls" selected="true"/>
											</s:VGroup>
										</s:HGroup>
									</s:VGroup>
									
									<s:Group height="100%"><s:BitmapImage source="@Embed('assets/icons/rb/spacer.png')" verticalCenter="2"/></s:Group>
									
									<s:VGroup gap="3" width="163" paddingTop="3">
										<ribbonSectionHeader:RibbonSectionHeader text="Setting for Two Displays" width="100%"/>
										<s:ButtonBar requireSelection="true" skinClass="ui.ribbonButtonBar.RibbonButtonBarSkin" dataProvider="{new ArrayCollection(['Presenter View', 'Mirror Show'])}"/>
									</s:VGroup>
									
									<s:Group height="100%"><s:BitmapImage source="@Embed('assets/icons/rb/spacer.png')" verticalCenter="2"/></s:Group>
									
									
									
								</s:HGroup>
							</s:Group>
						</s:Group>
					</s:NavigatorContent>
					<s:NavigatorContent label="Review"/>
				</mx:ViewStack>
			</s:VGroup>
		</s:Group>
		
		<!--********** MAIN CONTENT **********-->
		<s:HGroup width="100%" height="100%" gap="0">
			<!--group that contains left (navigation) panel of the screen-->
			<s:Group id="leftSide" width="200" height="100%">
				<!--left grey-blue background-->
				<s:Rect width="100%" height="100%">
					<s:fill>
						<s:SolidColor color="0xbdc2cd"/>
					</s:fill>
				</s:Rect>
				<!--beidge with the view options at the top-->
				<s:Rect width="100%" height="23">
					<s:fill>
						<s:SolidColor color="0xf0f0f0"/>
					</s:fill>
					<s:filters>
						<s:DropShadowFilter color="0x444444" alpha=".4" quality="3" strength="2" angle="90" distance="2"/> 
					</s:filters>
				</s:Rect>
				<s:Rect width="100%" height="1" top="23">
					<s:fill>
						<s:SolidColor color="0x9c9c9c"/>
					</s:fill>
				</s:Rect>
				<!--track for the scroller-->
				<s:BitmapImage top="24" height="100%" scaleMode="stretch" right="0" source="@Embed('assets/mainContent/leftPanelScrollTrack.png')"/>
			</s:Group>
			<!--horizontal split view separator-->
			<s:Group height="100%">
				<s:BitmapImage id="hSplitViewBar" height="100%" scaleMode="stretch" source="@Embed('assets/mainContent/splitViewSeparator.png')"/>
				<s:BitmapImage verticalCenter="0" horizontalCenter="0" source="@Embed('assets/mainContent/vsplitViewSeparatorDots.png')"/>
			</s:Group>
			<!--group that contains right (the most inportant) area of the main content panel-->
			<s:Group width="100%" height="100%" clipAndEnableScrolling="true">
				<!--grey-blue background-->
				<s:Rect width="100%" height="100%">
					<s:fill>
						<s:SolidColor color="0xbdc2cd"/>
					</s:fill>
					<s:filters>
						<s:GlowFilter color="0x444444" alpha=".23" inner="true" quality="3" strength="5"/>
					</s:filters>
				</s:Rect>
				<!--canvas-->
				<s:Rect id="canvas" width="420" height="340" horizontalCenter="0" verticalCenter="-30" scaleX="{canvasScale}" scaleY="{canvasScale}">
					<s:fill>
						<s:SolidColor color="0xffffff"/>
					</s:fill>
					<s:filters>
						<s:GlowFilter color="0x444444" alpha=".3" quality="3" strength="7"/>
					</s:filters>
				</s:Rect>
				<s:VGroup width="100%" bottom="0" gap="0">
					<!--vertical split view separator-->
					<s:Group width="100%">
						<s:BitmapImage width="100%" scaleMode="stretch" source="@Embed('assets/mainContent/hsplitViewSeparator.png')"/>
						<s:BitmapImage verticalCenter="0" horizontalCenter="0" source="@Embed('assets/mainContent/hsplitViewSeparatorDots.png')"/>
					</s:Group>
					<s:Group id="commentPanel" width="100%" height="60">
						<s:Rect width="100%" height="100%">
							<s:fill>
								<s:SolidColor color="0xffffff"/>
							</s:fill>
						</s:Rect>
						<s:BitmapImage height="100%" right="0" scaleMode="stretch" source="@Embed('assets/mainContent/leftPanelScrollTrack.png')"/>
					</s:Group>
				</s:VGroup>
			</s:Group>
		</s:HGroup>
		
		<!--********** FOOTER **********-->
		<s:HGroup id="footerGroup" width="100%" height="28" gap="0">
			<s:Group width="97" height="100%">
				<s:BitmapImage scaleMode="stretch" source="@Embed('assets/skinParts/footerGradient-1.png')" width="100%" height="100%"/>
				<s:ButtonBar id="footerButtonBar" requireSelection="true" skinClass="ui.footerButtonBar.FooterButtonBarSkin" dataProvider="{new ArrayCollection(['Normal View', 'Slide Sorter View', 'Slide Show'])}" 
							 verticalCenter="0" horizontalCenter="0" mouseOver="footerButtonBar_mouseOverHandler(event)" mouseOut="footerButtonBar_rollOutHandler(event)"/>
			</s:Group>
			<s:Rect width="1" height="100%">
				<s:fill>
					<s:SolidColor color="0x808080"/>
				</s:fill>
			</s:Rect>
			<s:Group width="100%" height="100%">
				<s:BitmapImage scaleMode="stretch" source="@Embed('assets/skinParts/footerGradient-2.png')" width="100%" height="100%"/>
				<s:Group height="100%"><s:Label text="{footerButtonBarValue}" verticalCenter="1" fontSize="11" left="6"/></s:Group>
				<s:HGroup height="100%" gap="0" right="0">
					<s:Rect width="1" height="100%">
						<s:fill>
							<s:SolidColor color="0x808080"/>
						</s:fill>
					</s:Rect>
					<s:Group width="128" height="100%">
						<s:Label verticalCenter="0" horizontalCenter="0" text="Slide 1 of 1" fontSize="11"/>
					</s:Group>
					<s:Rect width="1" height="100%">
						<s:fill>
							<s:SolidColor color="0x808080"/>
						</s:fill>
					</s:Rect>
					<s:Group height="100%">
						<s:Group height="100%"><s:Label left="16" text="{Math.round(zoomSlider.value) + '%'}" fontSize="11" verticalCenter="1"/></s:Group>
						<s:HGroup width="207" paddingLeft="50" gap="14" height="100%">
							<s:Group height="100%"><s:HSlider id="zoomSlider" value="95" skinClass="ui.nsSlider.NSSliderSkin" width="100" minimum="10" maximum="400" change="zoomSlider_changeHandler(event)" verticalCenter="0"/></s:Group>
							<s:Group height="100%"><s:Button id="zoomButton" verticalCenter="0"/></s:Group>
						</s:HGroup>
					</s:Group>
				</s:HGroup>
			</s:Group>
		</s:HGroup>
		
		
		
	</s:VGroup>
	
	<s:Rect width="100%" top="54" bottom="0">
		<s:stroke>
			<s:SolidColorStroke color="0x6b6b6b"/>
		</s:stroke>
	</s:Rect>
	
</s:Group>
